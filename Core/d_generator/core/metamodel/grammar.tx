Application:
    'application' name=ID '{'
        config=Config
        auth=Auth
        entities*=Entity
        relationships*=Relationship
    '}'
;

Config: 
    'config' '{'
        configProps*=ConfigProp
    '}'
;


ConfigProp:
    configPropName=ConfigPropName value=PropValue
;

ConfigPropName:
    'baseName' | 'frontendPort' | 'frontend' | 'serverPort' | 'server' | 'database' | 'bootstrap' | 'authentication'
;

PropValue:
    ID | INT
;

Auth: 
    'auth' '{'
        authProps*=AuthProp
    '}'
;

AuthProp:
    authPropName=AuthPropName value=PropValue
;

AuthPropName:
    'userEntity' | 'usernameProp' | 'passwordProp' | 'serverPort' | 'server' | 'database' | 'bootstrap' | 'authentication'
;

Entity:
    'entity' name=ID '{'
        properties*=Property[',']
    '}'
;

Property:
    name=ID ':' type=[SimpleType]  constraints*=Constraint
;

Constraint:
    ConcreteParameterizedConstraint | ConcreteNonParameterizedConstraint
;


ParameterizedConstraint: 
    'parameterizedConstraint' name=ID
;

ConcreteParameterizedConstraint:
    parameterizedConstraint=[ParameterizedConstraint] '(' value=Literal ')'
;

NonParameterizedConstraint:
    'nonParameterizedConstraint' name=ID
;

ConcreteNonParameterizedConstraint:
    nonParameterizedConstraint=[NonParameterizedConstraint]
;

Relationship:
    'relationship' relationshipType=RelationshipType '{'
        source=[Entity] sourceInjectedField=InjectedField? target=[Entity] targetInjectedField=InjectedField?
    '}'  
;

InjectedField:
    '{' fieldName=ID '}'
;

RelationshipType: 
    'OneToOne' | 'OneToMany' | 'ManyToMany'
;

SimpleType:
    'type' name=ID
;

Literal:
    INT | STRING | BOOL | FLOAT
;


Comment:
    /\/\/.*$/
;
