<html>
    <head>
        <link rel="stylesheet" href="https://bootswatch.com/_vendor/font-awesome/css/font-awesome.min.css" />
        <link rel="stylesheet" href="/static/index.css" />
        <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js"></script>
        <title>{{application.name}} - {{entity.name}} documentation</title>
        <script src="https://bootswatch.com/_vendor/jquery/dist/jquery.min.js"></script>
        <script src="https://bootswatch.com/_vendor/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
        {#
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        #}
    </head>
    <body>
        <div class="navbar navbar-expand-lg fixed-top bg-dark navbar-dark">
            <div class="container">
                <a href="/" class="navbar-brand">{{application.name}} - Documentation</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarResponsive">
                    <ul class="navbar-nav">
                    </ul>
                    <ul class="navbar-nav ms-md-auto">
                        <li class="nav-item">
                            <a target="_blank" rel="noopener" class="nav-link" href="https://github.com/nenad-misic/jsd"><i class="fa fa-github"></i> GitHub</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="m-5" id="spacer"></div>
        <div class="container-fluid my-5" id="content">
            <div class="row">
                <div class="col-lg-6 offset-lg-3 col-md-8 offset-md-2 col-sm-10 offset-sm-1 row mb-4">
                    <div class="col-12 text-center">
                        <h1>{{entity.name}} entity</h1>
                    </div>
                    <div class="col-8 offset-2">
                        <hr />
                    </div>
                </div>
                <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                    <div class="col-6">
                        <h2>Properties</h2>
                        {% for property in entity.properties %}
                        <div class="f-right col-12 my-2">
                            <h6 class="mx-3 d-inline"><code>{{property.name}}</code></h6>
                            <span class="badge bg-secondary rounded-pill">{{property.type}}</span>
                            {% for constraint in property.constraints %} 
                                {% if constraint.nonParameterizedConstraint is defined %} 
                                    {% if constraint.nonParameterizedConstraint.name=='primaryKey' %}
                                        <span class="badge bg-success rounded-pill">{{constraint.nonParameterizedConstraint.name}}</span>
                                    {% elif constraint.nonParameterizedConstraint.name=='required' %}
                                        <span class="badge bg-warning rounded-pill">{{constraint.nonParameterizedConstraint.name}}</span>
                                    {% else %}
                                        <span class="badge bg-info rounded-pill">{{constraint.nonParameterizedConstraint.name}}</span>
                                    {% endif %} 
                                {% endif %} 
                                {% if constraint.parameterizedConstraint is defined %}
                                    <span class="badge bg-primary rounded-pill">{{constraint.parameterizedConstraint.name}} = {{constraint.value}}</span>
                                {% endif %} 
                            {% endfor %}
                        </div>
                        {% endfor %}
                    </div>
                    <div class="col-6">
                        <div class="col-12">
                            <h2 class="f-right">Relationships</h2>
                        </div>
                        {% for relationship in application.relationships %} {% if relationship.source.name == entity.name or relationship.target.name == entity.name %}
                        <div class="f-right col-12 my-2">
                            <div class="f-right mx-3">
                                <h6 class="d-inline"><code>{{relationship.source.name}} ({{relationship.sourceInjectedField.fieldName}})</code></h6>
                                &nbsp;&#8702;&nbsp;
                                <h6 class="d-inline"><code>{{relationship.target.name}} ({{relationship.targetInjectedField.fieldName}})</code></h6>
                            </div>
                            <span class="badge bg-primary rounded-pill f-right">{{relationship.relationshipType}}</span>
                        </div>
                        {% endif %} {% endfor %}
                    </div>
                </div>
                {# ############################################################# GET ALL ############################################################# #}
                <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                    <div class="col-12 mb-3">
                        <h2>Endpoints</h2>
                    </div>
                    <div class="col-12">
                        <h4><span class="text-success">GET</span> <code>/{{entity.name|lowercase}}</code></h4>
                    </div>
                    <p class="text-justify col-12">
                        Used to list and search through out all the available entities of type {{entity.name}}. Can sort, filter, paginate and order the results using query parameters
                        <code>filter</code>, <code>sort</code>, <code>sortDirection</code>, <code>page</code>, <code>pageSize</code>
                    </p>
                    <h4>Parameters:</h4>
                    <table class="table w-100 ">
                        <thead>
                            <tr>
                                <th scope="col">Parameter</th>
                                <th scope="col">Type</th>
                                <th scope="col">Default</th>
                                <th scope="col">Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>filter</code></td>
                                <td>object</td>
                                <td><code>null</code></td>
                                <td>Parameter for filtering results. Consists of key-value pairs where key represents name of the property and value represents targeted value for filtering.</td>
                            </tr>
                            <tr>
                                <td><code>sort</code></td>
                                <td>string</td>
                                <td><code>null</code></td>
                                <td>String representing the name of property by which are results going to be sorted.</td>
                            </tr>
                            <tr>
                                <td><code>sortDirection</code></td>
                                <td>Enum (ASC, DESC)</td>
                                <td><code>ASC</code></td>
                                <td>Direction of sort. <code>ASC</code> for ascending and <code>DESC</code> for descending sort.</td>
                            </tr>
                            <tr>
                                <td><code>page</code></td>
                                <td>integer</td>
                                <td><code>0</code></td>
                                <td>Current page number.</td>
                            </tr>
                            <tr>
                                <td><code>pageSize</code></td>
                                <td>integer</td>
                                <td><code>100</code></td>
                                <td>Number of entities per page.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                    <pre contenteditable="true" class="pre-scrollable col-12"><code id="getallcode" class="language-json border border-1 border-primary">{
    "filter": {
        "{{(entity|primaryKeyProp).name}}": -1
    },
    "sort": "{{(entity|primaryKeyProp).name}}",
    "sortDirection": "ASC",
    "page": 0,
    "pageSize": 25
}</code></pre>
                    <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="getallreq">Send request</div>
               
                </div> <div id="getallreqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
                {# ############################################################# GET BY ID ############################################################# #}
                <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                    <div class="col-12">
                        <h4><span class="text-success">GET</span> <code>/{{entity.name|lowercase}}/:{{(entity|primaryKeyProp).name}}</code></h4>
                    </div>
                    <p class="text-justify col-12">
                        Used to fetch entity of type {{entity.name}} by identificator, passed as path parameter.
                    </p>
                    <h4>Parameters:</h4>
                    <table class="table w-100 ">
                        <thead>
                            <tr>
                                <th scope="col">Parameter</th>
                                <th scope="col">Type</th>
                                <th scope="col">Default</th>
                                <th scope="col">Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>{{(entity|primaryKeyProp).name}}</code></td>
                                <td>{{(entity|primaryKeyProp).type}}</td>
                                <td></td>
                                <td>Id of requested entity. The parameter is required.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                    <pre contenteditable="true" class="pre-scrollable col-12"><code id="getidcode" class="language-json border border-1 border-primary">{
    "{{(entity|primaryKeyProp).name}}": {{(entity|primaryKeyProp).type|defaultValueOfType}}
}</code></pre>
                    <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="getidreq">Send request</div>
                
                </div><div id="getidreqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
            </div>
            {# ############################################################# EXISTS BY ID ############################################################# #}
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                <div class="col-12">
                    <h4><span class="text-success">GET</span> <code>/{{entity.name|lowercase}}/exists/:{{(entity|primaryKeyProp).name}}</code></h4>
                </div>
                <p class="text-justify col-12">
                    Used to check if entity of type {{entity.name}} with identificator exists, by passing id as path parameter.
                </p>
                <h4>Parameters:</h4>
                <table class="table w-100 ">
                    <thead>
                        <tr>
                            <th scope="col">Parameter</th>
                            <th scope="col">Type</th>
                            <th scope="col">Default</th>
                            <th scope="col">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>{{(entity|primaryKeyProp).name}}</code></td>
                            <td>{{(entity|primaryKeyProp).type}}</td>
                            <td></td>
                            <td>Id of requested entity. The parameter is required.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                <pre contenteditable="true" class="pre-scrollable col-12"><code id="existscode" class="language-json border border-1 border-primary">{
    "{{(entity|primaryKeyProp).name}}": {{(entity|primaryKeyProp).type|defaultValueOfType}}
}</code></pre>
                <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="existsreq">Send request</div>
                
            </div><div id="existsreqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
            {# ############################################################# COUNT ############################################################# #}
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                <div class="col-12">
                    <h4><span class="text-success">GET</span> <code>/{{entity.name|lowercase}}/count</code></h4>
                </div>
                <p class="text-justify col-12">
                    Used to count total number of entities of type {{entity.name}}.
                </p>
                <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="countreq">Send request</div>
                
            </div><div id="countreqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
            {# ############################################################# DELETE BY ID ############################################################# #}
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                <div class="col-12">
                    <h4><span class="text-danger">DELETE</span> <code>/{{entity.name|lowercase}}/:{{(entity|primaryKeyProp).name}}</code></h4>
                </div>
                <p class="text-justify col-12">
                    Used for deleting an entity of type {{entity.name}} with identificator passed as path parameter.
                </p>
                <h4>Parameters:</h4>
                <table class="table w-100 ">
                    <thead>
                        <tr>
                            <th scope="col">Parameter</th>
                            <th scope="col">Type</th>
                            <th scope="col">Default</th>
                            <th scope="col">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>{{(entity|primaryKeyProp).name}}</code></td>
                            <td>{{(entity|primaryKeyProp).type}}</td>
                            <td></td>
                            <td>Id of requested entity. The parameter is required.</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                <pre contenteditable="true" class="pre-scrollable col-12"><code id="deletecode" class="language-json border border-1 border-primary">{
    "{{(entity|primaryKeyProp).name}}": {{(entity|primaryKeyProp).type|defaultValueOfType}}
}</code></pre>
                <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="deletereq">Send request</div>
                
            </div><div id="deletereqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
            {# ############################################################# ADD NEW ############################################################# #}
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                <div class="col-12">
                    <h4><span class="text-info">POST</span> <code>/{{entity.name|lowercase}}</code></h4>
                </div>
                <p class="text-justify col-12">
                    Used for adding new entity of type {{entity.name}}. Entity attributes are passed as request body, in json format.
                </p>
                <h4>Parameters:</h4>
                <table class="table w-100 ">
                    <thead>
                        <tr>
                            <th scope="col">Parameter</th>
                            <th scope="col">Type</th>
                            <th scope="col">Default</th>
                            <th scope="col">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for property in entity|propsExceptPk %}
                        <tr>
                            <td><code>{{property.name}}</code></td>
                            <td>{{property.type}}</td>
                            <td>{{property.type|defaultValueOfType}}</td>
                            <td>{{property.name}} of {{entity.name}}. Property is of type {{property.type}}. 
                            {% for constraint in property.constraints %} 
                                {% if constraint.nonParameterizedConstraint is defined %} 
                                    {% if constraint.nonParameterizedConstraint.name=='required' %}
                                        Property is required. 
                                    {% elif constraint.nonParameterizedConstraint.name=='unique' %}
                                        Value of this property has a unique constraint on database layer. 
                                    {% elif constraint.nonParameterizedConstraint.name=='emailPattern' %}
                                        Value of this property matches the email regex pattern. 
                                    {% elif constraint.nonParameterizedConstraint.name=='strongPasswordPattern' %}
                                        Value of this property matches the strong password regex pattern. 
                                    {% elif constraint.nonParameterizedConstraint.name=='autoincrement' %}
                                        This property is autoincremented.
                                    {% endif %} 
                                {% endif %} 
                                {% if constraint.parameterizedConstraint is defined %}
                                    {% if constraint.parameterizedConstraint.name=='min' %}
                                        Value of this property has minimal value is {{constraint.value}}. 
                                    {% elif constraint.parameterizedConstraint.name=='max' %}
                                        Value of this property has maximal value is {{constraint.value}}. 
                                    {% elif constraint.parameterizedConstraint.name=='pattern' %}
                                        Value of this property should match regex pattern "{{constraint.value}}". 
                                    {% elif constraint.parameterizedConstraint.name=='default' %}
                                        Default value for this property is {{constraint.value}}. 
                                {% endif %} 
                                {% endif %} 
                            {% endfor %}
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                <pre contenteditable="true" class="pre-scrollable col-12"><code id="addcode" class="language-json border border-1 border-primary">{
{% for property in entity|propsExceptPk %}
    "{{property.name}}": {{property.type|defaultValueOfType}}
{% endfor %}
}</code></pre>
                <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="addreq">Send request</div>
                
            </div><div id="addreqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
            {# ############################################################# UPDATE EXISTING ############################################################# #}
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-5 mb-3">
                <div class="col-12">
                    <h4><span class="text-warning">PUT</span> <code>/{{entity.name|lowercase}}</code></h4>
                </div>
                <p class="text-justify col-12">
                    Used for updating existing entity of type {{entity.name}}. If entity with given id does not exist, creates new one. Entity attributes are passed as request body, in json format.
                </p>
                <h4>Parameters:</h4>
                <table class="table w-100 ">
                    <thead>
                        <tr>
                            <th scope="col">Parameter</th>
                            <th scope="col">Type</th>
                            <th scope="col">Default</th>
                            <th scope="col">Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for property in entity.properties %}
                        <tr>
                            <td><code>{{property.name}}</code></td>
                            <td>{{property.type}}</td>
                            <td>{{property.type|defaultValueOfType}}</td>
                            <td>{{property.name}} of {{entity.name}}. Property is of type {{property.type}}.  
                            {% for constraint in property.constraints %} 
                                {% if constraint.nonParameterizedConstraint is defined %} 
                                    {% if constraint.nonParameterizedConstraint.name=='required' %}
                                        Property is required. 
                                    {% elif constraint.nonParameterizedConstraint.name=='unique' %}
                                        Value of this property has a unique constraint on database layer. 
                                    {% elif constraint.nonParameterizedConstraint.name=='emailPattern' %}
                                        Value of this property matches the email regex pattern. 
                                    {% elif constraint.nonParameterizedConstraint.name=='strongPasswordPattern' %}
                                        Value of this property matches the strong password regex pattern. 
                                    {% elif constraint.nonParameterizedConstraint.name=='autoincrement' %}
                                        This property is autoincremented.
                                    {% endif %} 
                                {% endif %} 
                                {% if constraint.parameterizedConstraint is defined %}
                                    {% if constraint.parameterizedConstraint.name=='min' %}
                                        Value of this property has minimal value is {{constraint.value}}. 
                                    {% elif constraint.parameterizedConstraint.name=='max' %}
                                        Value of this property has maximal value is {{constraint.value}}. 
                                    {% elif constraint.parameterizedConstraint.name=='pattern' %}
                                        Value of this property should match regex pattern "{{constraint.value}}". 
                                    {% elif constraint.parameterizedConstraint.name=='default' %}
                                        Default value for this property is {{constraint.value}}. 
                                    {% endif %} 
                                {% endif %} 
                            {% endfor %}
                            </td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
            <div class="col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row">
                <pre contenteditable="true" class="pre-scrollable col-12"><code id="updatecode" class="language-json border border-1 border-primary">{
{% for property in entity.properties %}
    "{{property.name}}": {{property.type|defaultValueOfType}}
{% endfor %}
}</code></pre>
                <div class="btn btn-primary btn-sm w-fit-content col-2 offset-10" id="updatereq">Send request</div>
                
            </div><div id="updatereqresponse" class="reqresponse col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-10 offset-sm-1 row mt-3" style="opacity: 0">
                </div>
        </div>
    </body>
    <script src="/static/{{entity.name|lowercase}}_page.js"></script>
    <script src="/static/index.js"></script>
</html>
